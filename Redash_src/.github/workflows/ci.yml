name: Tests
on:
  push:
    branches:
      - master
    tags:
      - '*'
  pull_request_target:
    branches:
      - master
env:
  CYPRESS_COVERAGE: "true"
  NODE_VERSION: 18
  YARN_VERSION: 1.22.22
  REDASH_COOKIE_SECRET: 2H9gNG9obnAQ9qnR9BDTQUph6CbXKCzF
  REDASH_SECRET_KEY: 2H9gNG9obnAQ9qnR9BDTQUph6CbXKCzF
  COMPOSE_DOCKER_CLI_BUILD: 1
  DOCKER_BUILDKIT: 1
  FRONTEND_BUILD_MODE: 1
  INSTALL_GROUPS: main,all_ds,dev
  PERCY_BRANCH: ${{github.head_ref || github.ref_name}}
  PERCY_COMMIT: ${{github.sha}}
  PERCY_PULL_REQUEST: ${{github.event.number}}
  COMMIT_INFO_BRANCH: ${{github.head_ref || github.ref_name}}
  COMMIT_INFO_MESSAGE: ${{github.event.head_commit.message}}
  COMMIT_INFO_AUTHOR: ${{github.event.pull_request.user.login}}
  COMMIT_INFO_SHA: ${{github.sha}}
  COMMIT_INFO_REMOTE: ${{github.server_url}}/${{github.repository}}
jobs:
  backend-lint:
    runs-on: ubuntu-22.04
    steps:
      - if: github.event.pull_request.mergeable == 'false'
        name: Exit if PR is not mergeable
        run: exit 1
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1
          ref: ${{ github.event.pull_request.head.sha }}
      - uses: actions/setup-python@v5
        with:
          python-version: '3.8'
      - run: sudo pip install black==24.3.0 ruff==0.1.9
      - run: ruff check .
      - run: black --check .

  backend-unit-tests:
    runs-on: ubuntu-22.04
    needs: backend-lint
    env:
      FRONTEND_BUILD_MODE: 0
    steps:
      - if: github.event.pull_request.mergeable == 'false'
        name: Exit if PR is not mergeable
        run: exit 1
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Build Docker Images
        run: |
          set -x
          touch .env
          docker compose build
          docker compose up -d
          sleep 10
      - name: Create Test Database
        run: docker compose run --rm postgres psql -h postgres -U postgres -c "create database tests;"
      - name: List Enabled Query Runners
        run: docker compose run --rm server manage ds list_types
      - name: Run Tests
        run: docker compose run --name tests server tests --junitxml=junit.xml --cov-report=xml --cov=redash --cov-config=.coveragerc tests/
      - name: Copy Test Results
        run: |
          mkdir -p /tmp/test-results/unit-tests
          docker cp tests:/app/coverage.xml ./coverage.xml
          docker cp tests:/app/junit.xml /tmp/test-results/unit-tests/results.xml
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: Store Test Results
        uses: actions/upload-artifact@v4
        with:
          name: backend-test-results
          path: /tmp/test-results
      - name: Store Coverage Results
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage
          path: coverage.xml

  frontend-lint:
    runs-on: ubuntu-22.04
    steps:
      - if: github.event.pull_request.mergeable == 'false'
        name: Exit if PR is not mergeable
        run: exit 1
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1
          ref: ${{ github.event.pull_request.head.sha }}
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'
      - name: Install Dependencies
        run: |
          npm install --global --force yarn@$YARN_VERSION
          yarn cache clean
          yarn --frozen-lockfile --network-concurrency 1
      - name: Run Lint
        run: yarn lint:ci
      - name: Store Test Results
        uses: actions/upload-artifact@v4
        with:
          name: frontend-test-results
          path: /tmp/test-results

  frontend-unit-tests:
    runs-on: ubuntu-22.04
    needs: frontend-lint
    steps:
      - if: github.event.pull_request.mergeable == 'false'
        name: Exit if PR is not mergeable
        run: exit 1
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1
          ref: ${{ github.event.pull_request.head.sha }}
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'
      - name: Install Dependencies
        run: |
          npm install --global --force yarn@$YARN_VERSION
          yarn cache clean
          yarn --frozen-lockfile --network-concurrency 1
      - name: Run App Tests
        run: yarn test
      - name: Run Visualizations Tests
        run: |
          cd viz-lib
          yarn test
      - run: yarn lint

  frontend-e2e-tests:
    runs-on: ubuntu-22.04
    needs: frontend-lint
    env:
      CYPRESS_INSTALL_BINARY: 0
      PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: 1
      INSTALL_GROUPS: main
      COMPOSE_PROFILES: e2e
      PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}
      CYPRESS_PROJECT_ID: ${{ secrets.CYPRESS_PROJECT_ID }}
      CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
    steps:
      - if: github.event.pull_request.mergeable == 'false'
        name: Exit if PR is not mergeable
        run: exit 1
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1
          ref: ${{ github.event.pull_request.head.sha }}
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'
      - name: Install Dependencies
        run: |
          npm install --global --force yarn@$YARN_VERSION
          yarn cache clean
          yarn --frozen-lockfile --network-concurrency 1
      - name: Setup Redash Server
        run: |
          set -x
          touch .env
          yarn build
          yarn cypress build
          yarn cypress start -- --skip-db-seed
          docker compose run cypress yarn cypress db-seed
      - name: Execute Cypress Tests
        run: yarn cypress run-ci
      - name: "Failure: output container logs to console"
        if: failure()
        run: docker compose logs
      - name: Copy Code Coverage Results
        run: docker cp cypress:/usr/src/app/coverage ./coverage || true
      - name: Store Coverage Results
        uses: actions/upload-artifact@v4
        with:
          name: frontend-coverage
          path: coverage
      - uses: actions/upload-artifact@v4
        with:
          name: frontend
          path: client/dist
          retention-days: 1
